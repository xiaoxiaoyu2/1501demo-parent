<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.est.mapper.ParetsMapper">
  <resultMap id="BaseResultMap" type="com.team.est.entity.Parets">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="modelId" jdbcType="BIGINT" property="modelId" />
    <result column="paretsName" jdbcType="VARCHAR" property="paretsName" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="supplier" jdbcType="VARCHAR" property="supplier" />
    <result column="img" jdbcType="VARCHAR" property="img" />
    <result column="isOrign" jdbcType="INTEGER" property="isOrign" />
    <result column="createdUserId" jdbcType="BIGINT" property="createdUserId" />
    <result column="updatedUserId" jdbcType="BIGINT" property="updatedUserId" />
    <result column="creatdTime" jdbcType="TIMESTAMP" property="creatdTime" />
    <result column="updatedTime" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="isDelete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, modelId, paretsName, price, supplier, img, isOrign, createdUserId, updatedUserId, 
    creatdTime, updatedTime, isDelete
  </sql>
  <select id="selectByExample" parameterType="com.team.est.entity.ParetsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from parets
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from parets
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from parets
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.team.est.entity.Parets">
    insert into parets (id, modelId, paretsName, 
      price, supplier, img, 
      isOrign, createdUserId, updatedUserId, 
      creatdTime, updatedTime, isDelete
      )
    values (#{id,jdbcType=BIGINT}, #{modelId,jdbcType=BIGINT}, #{paretsName,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{supplier,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}, 
      #{isOrign,jdbcType=INTEGER}, #{createdUserId,jdbcType=BIGINT}, #{updatedUserId,jdbcType=BIGINT}, 
      #{creatdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.team.est.entity.Parets">
    insert into parets
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="modelId != null">
        modelId,
      </if>
      <if test="paretsName != null">
        paretsName,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="supplier != null">
        supplier,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="isOrign != null">
        isOrign,
      </if>
      <if test="createdUserId != null">
        createdUserId,
      </if>
      <if test="updatedUserId != null">
        updatedUserId,
      </if>
      <if test="creatdTime != null">
        creatdTime,
      </if>
      <if test="updatedTime != null">
        updatedTime,
      </if>
      <if test="isDelete != null">
        isDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="modelId != null">
        #{modelId,jdbcType=BIGINT},
      </if>
      <if test="paretsName != null">
        #{paretsName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="supplier != null">
        #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="isOrign != null">
        #{isOrign,jdbcType=INTEGER},
      </if>
      <if test="createdUserId != null">
        #{createdUserId,jdbcType=BIGINT},
      </if>
      <if test="updatedUserId != null">
        #{updatedUserId,jdbcType=BIGINT},
      </if>
      <if test="creatdTime != null">
        #{creatdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.team.est.entity.Parets">
    update parets
    <set>
      <if test="modelId != null">
        modelId = #{modelId,jdbcType=BIGINT},
      </if>
      <if test="paretsName != null">
        paretsName = #{paretsName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="supplier != null">
        supplier = #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="isOrign != null">
        isOrign = #{isOrign,jdbcType=INTEGER},
      </if>
      <if test="createdUserId != null">
        createdUserId = #{createdUserId,jdbcType=BIGINT},
      </if>
      <if test="updatedUserId != null">
        updatedUserId = #{updatedUserId,jdbcType=BIGINT},
      </if>
      <if test="creatdTime != null">
        creatdTime = #{creatdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        isDelete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.team.est.entity.Parets">
    update parets
    set modelId = #{modelId,jdbcType=BIGINT},
      paretsName = #{paretsName,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      supplier = #{supplier,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      isOrign = #{isOrign,jdbcType=INTEGER},
      createdUserId = #{createdUserId,jdbcType=BIGINT},
      updatedUserId = #{updatedUserId,jdbcType=BIGINT},
      creatdTime = #{creatdTime,jdbcType=TIMESTAMP},
      updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
      isDelete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>