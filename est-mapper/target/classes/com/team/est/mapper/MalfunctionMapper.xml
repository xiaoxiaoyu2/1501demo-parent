<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.est.mapper.MalfunctionMapper">
  <resultMap id="BaseResultMap" type="com.team.est.entity.Malfunction">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="modelId" jdbcType="BIGINT" property="modelId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="isHint" jdbcType="INTEGER" property="isHint" />
    <result column="hintTitle" jdbcType="VARCHAR" property="hintTitle" />
    <result column="hintInfo" jdbcType="VARCHAR" property="hintInfo" />
    <result column="hintImg" jdbcType="VARCHAR" property="hintImg" />
    <result column="maintainTopPrice" jdbcType="DECIMAL" property="maintainTopPrice" />
    <result column="createdUserId" jdbcType="BIGINT" property="createdUserId" />
    <result column="updatedUserId" jdbcType="BIGINT" property="updatedUserId" />
    <result column="creatdTime" jdbcType="TIMESTAMP" property="creatdTime" />
    <result column="updatedTime" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="isDelete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, modelId, title, isHint, hintTitle, hintInfo, hintImg, maintainTopPrice, createdUserId, 
    updatedUserId, creatdTime, updatedTime, isDelete
  </sql>
  <select id="selectByExample" parameterType="com.team.est.entity.MalfunctionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from malfunction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from malfunction
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from malfunction
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.team.est.entity.Malfunction">
    insert into malfunction (id, modelId, title, 
      isHint, hintTitle, hintInfo, 
      hintImg, maintainTopPrice, createdUserId, 
      updatedUserId, creatdTime, updatedTime, 
      isDelete)
    values (#{id,jdbcType=BIGINT}, #{modelId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{isHint,jdbcType=INTEGER}, #{hintTitle,jdbcType=VARCHAR}, #{hintInfo,jdbcType=VARCHAR}, 
      #{hintImg,jdbcType=VARCHAR}, #{maintainTopPrice,jdbcType=DECIMAL}, #{createdUserId,jdbcType=BIGINT}, 
      #{updatedUserId,jdbcType=BIGINT}, #{creatdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{isDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.team.est.entity.Malfunction">
    insert into malfunction
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="modelId != null">
        modelId,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="isHint != null">
        isHint,
      </if>
      <if test="hintTitle != null">
        hintTitle,
      </if>
      <if test="hintInfo != null">
        hintInfo,
      </if>
      <if test="hintImg != null">
        hintImg,
      </if>
      <if test="maintainTopPrice != null">
        maintainTopPrice,
      </if>
      <if test="createdUserId != null">
        createdUserId,
      </if>
      <if test="updatedUserId != null">
        updatedUserId,
      </if>
      <if test="creatdTime != null">
        creatdTime,
      </if>
      <if test="updatedTime != null">
        updatedTime,
      </if>
      <if test="isDelete != null">
        isDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="modelId != null">
        #{modelId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="isHint != null">
        #{isHint,jdbcType=INTEGER},
      </if>
      <if test="hintTitle != null">
        #{hintTitle,jdbcType=VARCHAR},
      </if>
      <if test="hintInfo != null">
        #{hintInfo,jdbcType=VARCHAR},
      </if>
      <if test="hintImg != null">
        #{hintImg,jdbcType=VARCHAR},
      </if>
      <if test="maintainTopPrice != null">
        #{maintainTopPrice,jdbcType=DECIMAL},
      </if>
      <if test="createdUserId != null">
        #{createdUserId,jdbcType=BIGINT},
      </if>
      <if test="updatedUserId != null">
        #{updatedUserId,jdbcType=BIGINT},
      </if>
      <if test="creatdTime != null">
        #{creatdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.team.est.entity.Malfunction">
    update malfunction
    <set>
      <if test="modelId != null">
        modelId = #{modelId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="isHint != null">
        isHint = #{isHint,jdbcType=INTEGER},
      </if>
      <if test="hintTitle != null">
        hintTitle = #{hintTitle,jdbcType=VARCHAR},
      </if>
      <if test="hintInfo != null">
        hintInfo = #{hintInfo,jdbcType=VARCHAR},
      </if>
      <if test="hintImg != null">
        hintImg = #{hintImg,jdbcType=VARCHAR},
      </if>
      <if test="maintainTopPrice != null">
        maintainTopPrice = #{maintainTopPrice,jdbcType=DECIMAL},
      </if>
      <if test="createdUserId != null">
        createdUserId = #{createdUserId,jdbcType=BIGINT},
      </if>
      <if test="updatedUserId != null">
        updatedUserId = #{updatedUserId,jdbcType=BIGINT},
      </if>
      <if test="creatdTime != null">
        creatdTime = #{creatdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        isDelete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.team.est.entity.Malfunction">
    update malfunction
    set modelId = #{modelId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      isHint = #{isHint,jdbcType=INTEGER},
      hintTitle = #{hintTitle,jdbcType=VARCHAR},
      hintInfo = #{hintInfo,jdbcType=VARCHAR},
      hintImg = #{hintImg,jdbcType=VARCHAR},
      maintainTopPrice = #{maintainTopPrice,jdbcType=DECIMAL},
      createdUserId = #{createdUserId,jdbcType=BIGINT},
      updatedUserId = #{updatedUserId,jdbcType=BIGINT},
      creatdTime = #{creatdTime,jdbcType=TIMESTAMP},
      updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
      isDelete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--查询某商品的故障-->
  <select id="getMalfunctionByModelId" resultType="com.team.est.dto.MalfunctionDto">
     SELECT
     id,title,isHint,hintTitle,hintInfo,hintImg
     FROM `malfunction`
     WHERE modelid=#{modelid} AND isdelete=0
  </select>

</mapper>