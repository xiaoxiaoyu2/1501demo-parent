<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.est.mapper.ModelMapper">
  <resultMap id="BaseResultMap" type="com.team.est.entity.Model">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="modelName" jdbcType="VARCHAR" property="modelName" />
    <result column="brandId" jdbcType="BIGINT" property="brandId" />
    <result column="classifyId" jdbcType="BIGINT" property="classifyId" />
    <result column="exchangePrice" jdbcType="DECIMAL" property="exchangePrice" />
    <result column="topPrice" jdbcType="DECIMAL" property="topPrice" />
    <result column="faceImg" jdbcType="VARCHAR" property="faceImg" />
    <result column="contentImg" jdbcType="VARCHAR" property="contentImg" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="createdUserId" jdbcType="BIGINT" property="createdUserId" />
    <result column="updatedUserId" jdbcType="BIGINT" property="updatedUserId" />
    <result column="creatdTime" jdbcType="TIMESTAMP" property="creatdTime" />
    <result column="updatedTime" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="isDelete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, modelName, brandId, classifyId, exchangePrice, topPrice, faceImg, contentImg, 
    description, status, createdUserId, updatedUserId, creatdTime, updatedTime, isDelete
  </sql>
  <select id="selectByExample" parameterType="com.team.est.entity.ModelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from model
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from model
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from model
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.team.est.entity.Model">
    insert into model (id, modelName, brandId, 
      classifyId, exchangePrice, topPrice, 
      faceImg, contentImg, description, 
      status, createdUserId, updatedUserId, 
      creatdTime, updatedTime, isDelete
      )
    values (#{id,jdbcType=BIGINT}, #{modelName,jdbcType=VARCHAR}, #{brandId,jdbcType=BIGINT}, 
      #{classifyId,jdbcType=BIGINT}, #{exchangePrice,jdbcType=DECIMAL}, #{topPrice,jdbcType=DECIMAL}, 
      #{faceImg,jdbcType=VARCHAR}, #{contentImg,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{createdUserId,jdbcType=BIGINT}, #{updatedUserId,jdbcType=BIGINT}, 
      #{creatdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.team.est.entity.Model">
    insert into model
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="modelName != null">
        modelName,
      </if>
      <if test="brandId != null">
        brandId,
      </if>
      <if test="classifyId != null">
        classifyId,
      </if>
      <if test="exchangePrice != null">
        exchangePrice,
      </if>
      <if test="topPrice != null">
        topPrice,
      </if>
      <if test="faceImg != null">
        faceImg,
      </if>
      <if test="contentImg != null">
        contentImg,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdUserId != null">
        createdUserId,
      </if>
      <if test="updatedUserId != null">
        updatedUserId,
      </if>
      <if test="creatdTime != null">
        creatdTime,
      </if>
      <if test="updatedTime != null">
        updatedTime,
      </if>
      <if test="isDelete != null">
        isDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="modelName != null">
        #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="brandId != null">
        #{brandId,jdbcType=BIGINT},
      </if>
      <if test="classifyId != null">
        #{classifyId,jdbcType=BIGINT},
      </if>
      <if test="exchangePrice != null">
        #{exchangePrice,jdbcType=DECIMAL},
      </if>
      <if test="topPrice != null">
        #{topPrice,jdbcType=DECIMAL},
      </if>
      <if test="faceImg != null">
        #{faceImg,jdbcType=VARCHAR},
      </if>
      <if test="contentImg != null">
        #{contentImg,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createdUserId != null">
        #{createdUserId,jdbcType=BIGINT},
      </if>
      <if test="updatedUserId != null">
        #{updatedUserId,jdbcType=BIGINT},
      </if>
      <if test="creatdTime != null">
        #{creatdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.team.est.entity.Model">
    update model
    <set>
      <if test="modelName != null">
        modelName = #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="brandId != null">
        brandId = #{brandId,jdbcType=BIGINT},
      </if>
      <if test="classifyId != null">
        classifyId = #{classifyId,jdbcType=BIGINT},
      </if>
      <if test="exchangePrice != null">
        exchangePrice = #{exchangePrice,jdbcType=DECIMAL},
      </if>
      <if test="topPrice != null">
        topPrice = #{topPrice,jdbcType=DECIMAL},
      </if>
      <if test="faceImg != null">
        faceImg = #{faceImg,jdbcType=VARCHAR},
      </if>
      <if test="contentImg != null">
        contentImg = #{contentImg,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createdUserId != null">
        createdUserId = #{createdUserId,jdbcType=BIGINT},
      </if>
      <if test="updatedUserId != null">
        updatedUserId = #{updatedUserId,jdbcType=BIGINT},
      </if>
      <if test="creatdTime != null">
        creatdTime = #{creatdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        isDelete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.team.est.entity.Model">
    update model
    set modelName = #{modelName,jdbcType=VARCHAR},
      brandId = #{brandId,jdbcType=BIGINT},
      classifyId = #{classifyId,jdbcType=BIGINT},
      exchangePrice = #{exchangePrice,jdbcType=DECIMAL},
      topPrice = #{topPrice,jdbcType=DECIMAL},
      faceImg = #{faceImg,jdbcType=VARCHAR},
      contentImg = #{contentImg,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      createdUserId = #{createdUserId,jdbcType=BIGINT},
      updatedUserId = #{updatedUserId,jdbcType=BIGINT},
      creatdTime = #{creatdTime,jdbcType=TIMESTAMP},
      updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
      isDelete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--查询品牌下的商品-->
  <select id="selectModelByBrandId" parameterType="map" resultType="com.team.est.dto.ModelDto">
  SELECT id,modelName FROM model WHERE brandId=#{brandid} and classifyId=#{classifyid}
  </select>

  <!--查询商品的dto-->
  <select id="getModelDtoById" resultType="com.team.est.dto.ModelDto">
    SELECT id,modelName,topPrice,faceImg FROM model where id=#{id}
  </select>

</mapper>