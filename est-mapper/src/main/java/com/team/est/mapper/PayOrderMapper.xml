<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.est.mapper.PayOrderMapper">
  <resultMap id="BaseResultMap" type="com.team.est.entity.PayOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="orderNo" jdbcType="VARCHAR" property="orderNo" />
    <result column="payNo" jdbcType="VARCHAR" property="payNo" />
    <result column="aliTradeNo" jdbcType="VARCHAR" property="aliTradeNo" />
    <result column="userId" jdbcType="BIGINT" property="userId" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="payType" jdbcType="INTEGER" property="payType" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="payChannel" jdbcType="INTEGER" property="payChannel" />
    <result column="createdUserId" jdbcType="BIGINT" property="createdUserId" />
    <result column="updatedUserId" jdbcType="BIGINT" property="updatedUserId" />
    <result column="creatdTime" jdbcType="TIMESTAMP" property="creatdTime" />
    <result column="updatedTime" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="isDelete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, orderNo, payNo, aliTradeNo, userId, price, payType, status, payChannel, createdUserId, 
    updatedUserId, creatdTime, updatedTime, isDelete
  </sql>
  <select id="selectByExample" parameterType="com.team.est.entity.PayOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from pay_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pay_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pay_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.team.est.entity.PayOrder">
    insert into pay_order (id, orderNo, payNo, 
      aliTradeNo, userId, price, 
      payType, status, payChannel, 
      createdUserId, updatedUserId, creatdTime, 
      updatedTime, isDelete)
    values (#{id,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, #{payNo,jdbcType=VARCHAR}, 
      #{aliTradeNo,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{price,jdbcType=DECIMAL}, 
      #{payType,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{payChannel,jdbcType=INTEGER}, 
      #{createdUserId,jdbcType=BIGINT}, #{updatedUserId,jdbcType=BIGINT}, #{creatdTime,jdbcType=TIMESTAMP}, 
      #{updatedTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.team.est.entity.PayOrder">
    insert into pay_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNo != null">
        orderNo,
      </if>
      <if test="payNo != null">
        payNo,
      </if>
      <if test="aliTradeNo != null">
        aliTradeNo,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="payType != null">
        payType,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="payChannel != null">
        payChannel,
      </if>
      <if test="createdUserId != null">
        createdUserId,
      </if>
      <if test="updatedUserId != null">
        updatedUserId,
      </if>
      <if test="creatdTime != null">
        creatdTime,
      </if>
      <if test="updatedTime != null">
        updatedTime,
      </if>
      <if test="isDelete != null">
        isDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="payNo != null">
        #{payNo,jdbcType=VARCHAR},
      </if>
      <if test="aliTradeNo != null">
        #{aliTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="payChannel != null">
        #{payChannel,jdbcType=INTEGER},
      </if>
      <if test="createdUserId != null">
        #{createdUserId,jdbcType=BIGINT},
      </if>
      <if test="updatedUserId != null">
        #{updatedUserId,jdbcType=BIGINT},
      </if>
      <if test="creatdTime != null">
        #{creatdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.team.est.entity.PayOrder">
    update pay_order
    <set>
      <if test="orderNo != null">
        orderNo = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="payNo != null">
        payNo = #{payNo,jdbcType=VARCHAR},
      </if>
      <if test="aliTradeNo != null">
        aliTradeNo = #{aliTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        userId = #{userId,jdbcType=BIGINT},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="payType != null">
        payType = #{payType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="payChannel != null">
        payChannel = #{payChannel,jdbcType=INTEGER},
      </if>
      <if test="createdUserId != null">
        createdUserId = #{createdUserId,jdbcType=BIGINT},
      </if>
      <if test="updatedUserId != null">
        updatedUserId = #{updatedUserId,jdbcType=BIGINT},
      </if>
      <if test="creatdTime != null">
        creatdTime = #{creatdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        isDelete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.team.est.entity.PayOrder">
    update pay_order
    set orderNo = #{orderNo,jdbcType=VARCHAR},
      payNo = #{payNo,jdbcType=VARCHAR},
      aliTradeNo = #{aliTradeNo,jdbcType=VARCHAR},
      userId = #{userId,jdbcType=BIGINT},
      price = #{price,jdbcType=DECIMAL},
      payType = #{payType,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      payChannel = #{payChannel,jdbcType=INTEGER},
      createdUserId = #{createdUserId,jdbcType=BIGINT},
      updatedUserId = #{updatedUserId,jdbcType=BIGINT},
      creatdTime = #{creatdTime,jdbcType=TIMESTAMP},
      updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
      isDelete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>