<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.est.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="com.team.est.entity.Users">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="userName" jdbcType="VARCHAR" property="userName" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="isAuthentication" jdbcType="INTEGER" property="isAuthentication" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="cardNo" jdbcType="VARCHAR" property="cardNo" />
    <result column="faceUrl" jdbcType="VARCHAR" property="faceUrl" />
    <result column="openId" jdbcType="VARCHAR" property="openId" />
    <result column="bindStatus" jdbcType="INTEGER" property="bindStatus" />
    <result column="bindTime" jdbcType="TIMESTAMP" property="bindTime" />
    <result column="updatedUserId" jdbcType="BIGINT" property="updatedUserId" />
    <result column="creatdTime" jdbcType="TIMESTAMP" property="creatdTime" />
    <result column="updatedTime" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="isDelete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account, password, salt, userName, sex, isAuthentication, name, cardNo, faceUrl, 
    openId, bindStatus, bindTime, updatedUserId, creatdTime, updatedTime, isDelete
  </sql>
  <select id="selectByExample" parameterType="com.team.est.entity.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from users
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.team.est.entity.Users">
    insert into users (id, account, password, 
      salt, userName, sex, 
      isAuthentication, name, cardNo, 
      faceUrl, openId, bindStatus, 
      bindTime, updatedUserId, creatdTime, 
      updatedTime, isDelete)
    values (#{id,jdbcType=BIGINT}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{isAuthentication,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{cardNo,jdbcType=VARCHAR}, 
      #{faceUrl,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, #{bindStatus,jdbcType=INTEGER}, 
      #{bindTime,jdbcType=TIMESTAMP}, #{updatedUserId,jdbcType=BIGINT}, #{creatdTime,jdbcType=TIMESTAMP}, 
      #{updatedTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.team.est.entity.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="userName != null">
        userName,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="isAuthentication != null">
        isAuthentication,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="cardNo != null">
        cardNo,
      </if>
      <if test="faceUrl != null">
        faceUrl,
      </if>
      <if test="openId != null">
        openId,
      </if>
      <if test="bindStatus != null">
        bindStatus,
      </if>
      <if test="bindTime != null">
        bindTime,
      </if>
      <if test="updatedUserId != null">
        updatedUserId,
      </if>
      <if test="creatdTime != null">
        creatdTime,
      </if>
      <if test="updatedTime != null">
        updatedTime,
      </if>
      <if test="isDelete != null">
        isDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="isAuthentication != null">
        #{isAuthentication,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="faceUrl != null">
        #{faceUrl,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="bindStatus != null">
        #{bindStatus,jdbcType=INTEGER},
      </if>
      <if test="bindTime != null">
        #{bindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedUserId != null">
        #{updatedUserId,jdbcType=BIGINT},
      </if>
      <if test="creatdTime != null">
        #{creatdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.team.est.entity.Users">
    update users
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="isAuthentication != null">
        isAuthentication = #{isAuthentication,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        cardNo = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="faceUrl != null">
        faceUrl = #{faceUrl,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        openId = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="bindStatus != null">
        bindStatus = #{bindStatus,jdbcType=INTEGER},
      </if>
      <if test="bindTime != null">
        bindTime = #{bindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedUserId != null">
        updatedUserId = #{updatedUserId,jdbcType=BIGINT},
      </if>
      <if test="creatdTime != null">
        creatdTime = #{creatdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        isDelete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.team.est.entity.Users">
    update users
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      userName = #{userName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      isAuthentication = #{isAuthentication,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      cardNo = #{cardNo,jdbcType=VARCHAR},
      faceUrl = #{faceUrl,jdbcType=VARCHAR},
      openId = #{openId,jdbcType=VARCHAR},
      bindStatus = #{bindStatus,jdbcType=INTEGER},
      bindTime = #{bindTime,jdbcType=TIMESTAMP},
      updatedUserId = #{updatedUserId,jdbcType=BIGINT},
      creatdTime = #{creatdTime,jdbcType=TIMESTAMP},
      updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
      isDelete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>